---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Denise Chang
thanks: "Code and data are available at: [https://github.com/DeniseChang9/Emergency_service_demands.git](https://github.com/DeniseChang9/Emergency_service_demands.git)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(palmerpenguins)
```


# Introduction

"In an emergency, seconds count." [@city_of_toronto_public_safety_alerts]. Emergency medical services (EMS) are essential to public health by providing care during life-threatening situations. However, Toronto’s paramedic services are struggling to meet demand. Toronto Auditor General’s Office reports that there were over 1,200 episodes in 2023 where no ambulances were available. [@toronto_auditor_paramedic_services]. To echo this report, this paper examines EMS demand using Toronto Paramedic Services’ incident data from Open Data Toronto.

In this analysis, I am interested in EMS demand against time-based factors in Toronto from 2017 to 2022. I explore trends in paramedic services, such as dispatch time, incident type, and number of units dispatched per incident to identify periods of high-volume demand and low availability of resources. I find that ... [ADD A FEW RESULTS HERE (or in a different paragraph??)]

The remainder of this paper is organized as follows. @sec-data discusses the data source and an overview of the studied variables. @sec-model constructs a model that predicts a shortage in paramedic resources based on time factors. @sec-results presents the results and findings of the exploration of the data. @sec-discussion discusses implications, limitations, and suggestions for future research. [TELEGRAPH APPENDIX HERE]

# Data {#sec-data}

The statistical programming language R [@R] is used to process, manage and visualize the data. Specifically, statistical libraries such as `opendatatoronto` [@opendatatoronto], `openxlsx` [@openxlsx] and `janitor` [@janitor] are used to simulate, download and clean the raw data. The library `arrow` [@arrow] was used to save the simulated dataset and the analysis dataset. Other libraries like '`knitr` [@knitr], `here` [@here] are used to load and to render tables. The library `tidyverse` [@tidyverse] is useful throughout the entire data manipulation process. 

## Data source

The dataset used for this analysis is titled "Paramedic Services Incident Data" and is published by Toronto Paramedic Services [@data_parmedic_source]. For this paper, the dataset is retrieved from the City of Toronto Open Data Portal through the R package `opendatatoronto` [@opendatatoronto]. The initial dataset features paramedic dispatch time, the type of incident, the priority level of each incident, the number of paramedic units arrived at scene and the forward station area of the incident. These features are annually refreshed on Open Data Toronto by Toronto Paramedic Services. 

The data used for this paper was retrieved on November 25, 2024 and was last refreshed on October 5, 2023. 

## Measurements

The dataset captures ambulance incident records with real-world emergency service activities. 

[INSERT SAMPLE OF CLEAN DATASET]

Table 1 is a sample of the clean dataset used in this paper. Each row in the dataset represents to a different incident. More information such as the type of emergency and paramedic response are also included and are unique to the incident. 

The temporal variables (`year`, `month`, `day_of_week`, and `hour`) are derived from dispatch timestamp recorded during each incident. These entries useful in exploring seasonal, weekly, and daily patterns. 

The incident type (`incident_type`) represents a classification provided by dispatchers or paramedics based on the nature of the call. This variable reflects categories such as medical emergencies, vehicle accidents, and fires. It ensures that diverse incidents are grouped into manageable classifications for analysis.

The response metrics (`avg_units_arrived` and `count`) represent operational data tied to each incident. The `avg_units_arrived` variable is calculated by averaging the number of units dispatched to each type of incident within specific time intervals. The `count` variable represents the number of incidents recorded for each combination of temporal and incident characteristics. These variables quantify resource utilization and demand, enabling a detailed exploration of service patterns.

Through this systematic representation of real-world phenomena, the dataset provides a foundation for analyzing ambulance demand and the factors influencing emergency service delivery.

## Outcome Variables

This analysis focuses on two outcome variables that represent ambulance response activity:

### `avg_units_arrived`
This variable measures the average number of ambulance units arriving at incidents. It is continuous and provides insight into the resource intensity of different types of calls.

- **Visualization**: A violin plot is used to examine the distribution of `avg_units_arrived` across different `incident_type` values. Temporal trends are visualized with a line chart showing annual changes in `avg_units_arrived`.

### `count`
This variable captures the number of incidents for each category and is integer-valued. It reflects the frequency of calls and is critical for understanding demand patterns.

- **Visualization**: Bar charts display the total counts of incidents by `incident_type`, while a heatmap reveals temporal patterns by plotting `count` across combinations of `hour`, `day_of_week`, and `month`.

## Predictor Variables

Several variables are explored as predictors to analyze temporal, categorical, and spatial factors influencing ambulance response:

### Temporal Predictors
- **`year`**: Indicates the year of each incident, spanning 2017 to 2022.  
  - **Visualization**: A line chart visualizes changes in `count` and `avg_units_arrived` over time to detect trends.  

- **`month`**: An ordered factor capturing the month of the incident.  
  - **Visualization**: A seasonal heatmap overlays `month` and `day_of_week` to analyze patterns in incident frequency and average unit arrival.  

- **`day_of_week`**: An ordered factor representing the day of the week.  
  - **Visualization**: Temporal variability is further explored with bar charts and heatmaps.  

- **`hour`**: Represents the hour of the day (0–23).  
  - **Visualization**: A density plot of incident counts by hour reveals peak times for service demands.

### Categorical Predictor
- **`incident_type`**: A categorical variable indicating the type of incident (e.g., medical emergencies, vehicle accidents).  
  - **Visualization**: Stacked bar charts and facet grids illustrate differences in resource use and frequency across `incident_type`.

## Summary Statistics and Relationships

To understand the dataset, summary statistics are computed for `avg_units_arrived` and `count`, including mean, median, and standard deviation. Visualizations such as histograms and scatter plots capture distributions and relationships between the variables. A scatter plot matrix examines pairwise relationships, while a correlation heatmap identifies patterns among numerical variables.

Together, these outcomes and predictors provide a detailed view of ambulance demand and the factors influencing it.


# Model {#sec-model}

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results {#sec-results}

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: false
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: false
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion {#sec-discussion}

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: false
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: false
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


